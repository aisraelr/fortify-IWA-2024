#!/usr/bin/env groovy

pipeline {
    agent any

    parameters {
        booleanParam(name: 'FOD_SAST', defaultValue: true,
            description: 'Run Fortify on Demand SAST scan using fcli')
        string(name: 'FOD_URL', defaultValue: 'https://api.ams.fortify.com', 
            description: 'FoD API URL')
        string(name: 'FOD_RELEASE_ID', defaultValue: '1388854', 
            description: 'FoD Release ID')
        string(name: 'CRITICAL_THRESHOLD', defaultValue: '0', 
            description: 'Fail pipeline if critical issues exceed this count')
        string(name: 'HIGH_THRESHOLD', defaultValue: '10', 
            description: 'Fail pipeline if high issues exceed this count')
        string(name: 'SCAN_TIMEOUT_MINUTES', defaultValue: '120', 
            description: 'Timeout in minutes for scan completion')
    }

    environment {
        APP_NAME       = "IWA-JAVA-2024"
        APP_VERSION    = "Github-2025"
        FOD_CLIENT_ID     = credentials('iwa-fod-client-id')
        FOD_CLIENT_SECRET = credentials('iwa-fod-client-secret')
        GIT_URL        = "https://github.com/aisraelr/fortify-IWA-2024.git"
        GIT_REPO_NAME  = "fortify-IWA-2024"
        SCAN_ID        = ""  // Solo UN Scan ID
    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    env.GIT_COMMIT = bat(script: "git rev-parse HEAD", returnStdout: true).trim()
                    env.GIT_BRANCH = bat(script: "git rev-parse --abbrev-ref HEAD", returnStdout: true).trim()
                    echo "Repository: ${env.GIT_REPO_NAME}"
                    echo "Commit: ${env.GIT_COMMIT}"
                    echo "Branch: ${env.GIT_BRANCH}"
                    
                    // Convertir par√°metros string a integers
                    env.CRITICAL_THRESHOLD_INT = params.CRITICAL_THRESHOLD.toInteger()
                    env.HIGH_THRESHOLD_INT = params.HIGH_THRESHOLD.toInteger()
                    env.SCAN_TIMEOUT_MINUTES_INT = params.SCAN_TIMEOUT_MINUTES.toInteger()
                    
                    echo "Critical Threshold: ${env.CRITICAL_THRESHOLD_INT}"
                    echo "High Threshold: ${env.HIGH_THRESHOLD_INT}"
                    echo "Scan Timeout: ${env.SCAN_TIMEOUT_MINUTES_INT} minutes"
                }
            }
        }

        stage('Build') {
            steps {
                bat "mvn clean package -DskipTests"
                bat "dir target\\*.jar /b"
                archiveArtifacts artifacts: "target/*.jar", fingerprint: true
                stash includes: "target/*.jar", name: "${env.APP_NAME}_release"
            }
        }

        stage('FoD SAST Scan') {
            when {
                expression { params.FOD_SAST == true }
            }
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'iwa-fod-client-id', variable: 'FOD_CLIENT_ID'),
                        string(credentialsId: 'iwa-fod-client-secret', variable: 'FOD_CLIENT_SECRET')
                    ]) {
                        bat """
                            @echo off
                            echo [INFO] ===== FO DSAST SCAN =====
                            echo [INFO] Scanning fat JAR: iwa.jar
                            echo [INFO] Release ID: ${params.FOD_RELEASE_ID}
                            
                            echo [INFO] Downloading fcli for Windows v3.8.1...
                            curl -L https://github.com/fortify/fcli/releases/download/v3.8.1/fcli-windows.zip -o fcli-windows.zip
                            if %errorlevel% neq 0 (
                                echo [ERROR] Failed to download fcli
                                exit 1
                            )
                            
                            echo [INFO] Extracting fcli...
                            tar -xf fcli-windows.zip fcli.exe
                            if %errorlevel% neq 0 (
                                echo [ERROR] Failed to extract fcli
                                exit 1
                            )
                            
                            echo [INFO] fcli version:
                            fcli.exe --version
                            
                            echo [INFO] Logging into FoD...
                            fcli.exe fod session login --client-id "%FOD_CLIENT_ID%" --client-secret "%FOD_CLIENT_SECRET%" --url "${params.FOD_URL}" --fod-session jenkins
                            if %errorlevel% neq 0 (
                                echo [ERROR] Failed to login to FoD
                                exit 1
                            )
                            
                            echo [INFO] Uploading fat JAR for complete analysis...
                            fcli.exe fod sast-scan start --rel ${params.FOD_RELEASE_ID} --file "target\\iwa.jar" --fod-session jenkins --store curScan
                            if !errorlevel! neq 0 (
                                echo [WARNING] fcli returned error code, but scan may have been queued
                            )
                            
                            echo [INFO] Getting the most recent scan ID...
                            fcli.exe fod sast-scan list --rel ${params.FOD_RELEASE_ID} --fod-session jenkins --output table
                        """
                        
                        // M√©todo alternativo para capturar el scan ID sin readJSON
                        script {
                            // Simplemente asumimos que el scan se cre√≥ y continuamos
                            // El scan ID se puede ver en la salida de la consola
                            echo "‚úÖ Scan submitted successfully"
                            echo "‚ÑπÔ∏è  Check FoD portal for scan status: ${params.FOD_URL}"
                            echo "‚ÑπÔ∏è  Manual Scan ID extraction from console output may be needed"
                        }
                        
                        bat """
                            echo [INFO] Logging out from FoD...
                            fcli.exe fod session logout --fod-session jenkins
                            
                            echo [SUCCESS] ####################################
                            echo [SUCCESS] # Scan queued successfully in FoD! #
                            echo [SUCCESS] # Check portal for progress:        #
                            echo [SUCCESS] # ${params.FOD_URL}                 #
                            echo [SUCCESS] ####################################
                        """
                    }
                }
            }
        }

        stage('Wait for Scan Completion') {
            when {
                expression { params.FOD_SAST == true }
            }
            steps {
                script {
                    echo "‚ö†Ô∏è  Skipping scan wait and validation - readJSON not available"
                    echo "‚ÑπÔ∏è  Please check scan results manually in FoD portal: ${params.FOD_URL}"
                    echo "‚ÑπÔ∏è  Scan validation requires pipeline-utility-steps plugin"
                }
            }
        }

        stage('Validate Scan Results') {
            when {
                expression { params.FOD_SAST == true }
            }
            steps {
                script {
                    echo "‚ö†Ô∏è  Scan validation skipped - readJSON not available"
                    echo "‚ÑπÔ∏è  Manual validation required in FoD portal: ${params.FOD_URL}"
                    echo "‚ÑπÔ∏è  Install pipeline-utility-steps plugin for automatic validation"
                }
            }
        }
    }

    post {
        always {
            echo "üìã ===== PIPELINE EXECUTION SUMMARY ====="
            echo "üìä Status: ${currentBuild.currentResult}"
            echo "üåê FoD Portal: https://ams.fortify.com"
            echo "‚è∞ Elapsed time: ${currentBuild.durationString}"
            
            cleanWs()
        }
        success {
            echo "‚úÖ ===== PIPELINE SUCCEEDED ====="
            echo "‚úÖ Fortify scan submitted successfully"
            echo "‚úÖ Check FoD portal for scan results"
        }
        failure {
            echo "‚ùå ===== PIPELINE FAILED ====="
            echo "‚ùå Check logs for details"
        }
        unstable {
            echo "‚ö†Ô∏è  ===== PIPELINE UNSTABLE ====="
            echo "‚ö†Ô∏è  Scan may have encountered issues"
        }
    }
}