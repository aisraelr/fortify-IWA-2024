pipeline {
    agent any

    environment {
        FOD_SESSION = 'jenkins'
        RELEASE_ID  = '1388854'
    }

    stages {

        stage('Checkout SCM') {
            steps {
                echo "üîÑ Checking out source code..."
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/aisraelr/fortify-IWA-2024.git',
                        credentialsId: 'GitHub'
                    ]]
                ])
            }
        }

        stage('FoD SAST Scan') {
            steps {
                echo "üöÄ Starting FoD SAST scan..."
                bat """
                    fcli.exe fod sast-scan start ^
                        --rel %RELEASE_ID% ^
                        --file "target\\iwa.jar" ^
                        --fod-session %FOD_SESSION% ^
                        --store curScan ^
                        --output json ^
                        1>curScan_raw.txt 2>curScan.err
                """

                powershell """
                    # Extraer solo la l√≠nea JSON v√°lida
                    \$jsonLine = Select-String -Path curScan_raw.txt -Pattern '^{.*}\$' | ForEach-Object { \$_.
Matches[0].Value }
                    \$jsonLine | Set-Content -Encoding UTF8 curScan.json
                """

                script {
                    def scanInfo = readJSON file: 'curScan.json'
                    env.SCAN_ID = scanInfo.releaseAndScanId
                    echo "‚úÖ Scan started: ${env.SCAN_ID}"
                }
            }
        }

        stage('Wait for Scan Completion') {
            steps {
                echo "‚è≥ Waiting for scan completion..."
                bat """
                    fcli.exe fod sast-scan wait-for ::SCAN_ID:: ^
                        --fod-session %FOD_SESSION% ^
                        --timeout 1h ^
                        --output json ^
                        1>waitScan.json 2>waitScan.err
                """
            }
        }

        stage('Get Scan Results') {
            steps {
                echo "üìÑ Retrieving scan results..."
                bat """
                    fcli.exe fod sast-scan results ::SCAN_ID:: ^
                        --fod-session %FOD_SESSION% ^
                        --output json ^
                        --store scanResults ^
                        1>scanResults.json 2>scanResults.err
                """

                script {
                    def results = readJSON file: 'scanResults.json'
                    echo "Scan Status: ${results.status}"
                    echo "Total Issues: ${results.totalIssueCount}"
                }
            }
        }
    }

    post {
        always {
            echo "üßπ Cleaning up..."
            bat "del curScan_raw.txt curScan.json curScan.err waitScan.json waitScan.err scanResults.json scanResults.err"
        }
        success {
            echo "‚úÖ Pipeline completed successfully!"
        }
        failure {
            echo "‚ùå Pipeline failed!"
        }
    }
}
