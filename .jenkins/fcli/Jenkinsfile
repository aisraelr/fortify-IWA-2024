#!/usr/bin/env groovy

pipeline {
    agent any

    parameters {
        string(name: 'FOD_RELEASE_ID', defaultValue: '', description: 'Fortify on Demand Release ID')
    }

    environment {
        FCLI_HOME = 'C:\\fcli'   // Ajusta a tu ruta local de fcli.exe si es distinta
        PATH = "${env.PATH};${env.FCLI_HOME}"
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Checking out source code..."
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo "Building the application..."
                bat "mvn clean package -DskipTests"
            }
        }

        stage('FoD SAST Scan') {
            steps {
                echo "Starting FoD SAST scan..."
                bat """
                    fcli.exe fod sast-scan start ^
                        --rel ${params.FOD_RELEASE_ID} ^
                        --file "target\\iwa.jar" ^
                        --fod-session jenkins ^
                        --store curScan ^
                        --output json > curScan.json
                """
                script {
                    def curScan = readJSON file: 'curScan.json'
                    env.SCAN_ID = curScan.id.toString()
                    echo "âœ… Captured Scan ID: ${env.SCAN_ID}"
                }
            }
        }

        stage('Wait for Scan Completion') {
            steps {
                echo "Waiting for scan completion..."
                bat """
                    fcli.exe fod sast-scan wait-for --scan ${env.SCAN_ID} --fod-session jenkins
                """
            }
        }

        stage('Get Scan Results') {
            steps {
                echo "Fetching scan results..."
                bat """
                    fcli.exe fod sast-scan get ${env.SCAN_ID} --fod-session jenkins --output json > scanResult.json
                """
                script {
                    def scanResult = readJSON file: 'scanResult.json'
                    echo "ðŸ“Š Scan Result: ${scanResult}"
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up..."
        }
    }
}
