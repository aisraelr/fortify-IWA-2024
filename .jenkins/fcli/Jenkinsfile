#!/usr/bin/env groovy

pipeline {
    agent any

    parameters {
        booleanParam(name: 'FOD_SAST', defaultValue: true,
            description: 'Run Fortify on Demand SAST scan using fcli')
        string(name: 'FOD_URL', defaultValue: 'https://api.ams.fortify.com', 
            description: 'FoD API URL')
        string(name: 'FOD_RELEASE_ID', defaultValue: '1503133', 
            description: 'FoD Release ID')
        string(name: 'CRITICAL_THRESHOLD', defaultValue: '0', 
            description: 'Fail pipeline if critical issues exceed this count')
        string(name: 'HIGH_THRESHOLD', defaultValue: '10', 
            description: 'Fail pipeline if high issues exceed this count')
        string(name: 'SCAN_TIMEOUT_MINUTES', defaultValue: '120', 
            description: 'Timeout in minutes for scan completion')
    }

    environment {
        APP_NAME       = "IWA-JAVA-2024"
        APP_VERSION    = "Github-2025"
        FOD_CLIENT_ID     = credentials('iwa-fod-client-id')
        FOD_CLIENT_SECRET = credentials('iwa-fod-client-secret')
        GIT_URL        = "https://github.com/aisraelr/fortify-IWA-2024.git"
        GIT_REPO_NAME  = "fortify-IWA-2024"
        SCAN_ID        = "" 
    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    env.GIT_COMMIT = bat(script: "git rev-parse HEAD", returnStdout: true).trim()
                    env.GIT_BRANCH = bat(script: "git rev-parse --abbrev-ref HEAD", returnStdout: true).trim()
                    echo "Repository: ${env.GIT_REPO_NAME}"
                    
                    env.CRITICAL_THRESHOLD_INT = params.CRITICAL_THRESHOLD.toInteger()
                    env.HIGH_THRESHOLD_INT = params.HIGH_THRESHOLD.toInteger()
                    env.SCAN_TIMEOUT_MINUTES_INT = params.SCAN_TIMEOUT_MINUTES.toInteger()
                    
                    echo "Critical Threshold: ${env.CRITICAL_THRESHOLD_INT}"
                    echo "High Threshold: ${env.HIGH_THRESHOLD_INT}"
                }
            }
        }

        stage('Build') {
            steps {
                bat "mvn clean package -DskipTests"
                archiveArtifacts artifacts: "target/*.jar", fingerprint: true
            }
        }

        stage('FoD SAST Scan') {
            steps {
                script {
                    if (params.FOD_SAST == true) {
                        withCredentials([
                            string(credentialsId: 'iwa-fod-client-id', variable: 'FOD_CLIENT_ID'),
                            string(credentialsId: 'iwa-fod-client-secret', variable: 'FOD_CLIENT_SECRET')
                        ]) {
                            // Ejecutar el comando y capturar el output COMPLETO
                            def scanOutput = bat(script: """
                                @echo off
                                echo [INFO] Downloading fcli for Windows v3.8.1...
                                curl -L https://github.com/fortify/fcli/releases/download/v3.8.1/fcli-windows.zip -o fcli-windows.zip
                                if %errorlevel% neq 0 exit 1
                                
                                echo [INFO] Extracting fcli...
                                tar -xf fcli-windows.zip fcli.exe
                                if %errorlevel% neq 0 exit 1
                                
                                echo [INFO] Logging into FoD...
                                fcli.exe fod session login --client-id "%FOD_CLIENT_ID%" --client-secret "%FOD_CLIENT_SECRET%" --url "${params.FOD_URL}" --fod-session jenkins
                                if %errorlevel% neq 0 exit 1
                                
                                echo [INFO] Uploading fat JAR for complete analysis...
                                fcli.exe fod sast-scan start --rel ${params.FOD_RELEASE_ID} --file "target\\\\iwa.jar" --fod-session jenkins --store curScan
                                if %errorlevel% neq 0 (
                                    echo [WARNING] fcli returned error code, but scan may have been queued
                                )
                                
                                echo [INFO] Logging out from FoD...
                                fcli.exe fod session logout --fod-session jenkins
                            """, returnStdout: true).trim()
                            
                            // DEBUG: Mostrar el output completo
                            echo "=== FULL OUTPUT ==="
                            echo scanOutput
                            echo "==================="
                            
                            // Extraer el Scan ID usando una expresi√≥n regular m√°s simple
                            def scanId = null
                            
                            // Buscar el patr√≥n: n√∫mero de 8 d√≠gitos despu√©s de "Id"
                            def pattern = /Id\\s+(\\d+)\\s+Static\\s+Pending/
                            def matcher = (scanOutput =~ pattern)
                            
                            if (matcher.find()) {
                                scanId = matcher[0][1]
                                echo "‚úÖ Scan ID encontrado autom√°ticamente: ${scanId}"
                                env.SCAN_ID = scanId
                            } else {
                                echo "‚ö†Ô∏è  No se pudo extraer el Scan ID autom√°ticamente"
                                echo "üîç Buscando cualquier n√∫mero de 8 d√≠gitos..."
                                
                                // Buscar cualquier n√∫mero de 8 d√≠gitos en el output
                                def digitPattern = /\\b(\\d{8,})\\b/
                                def digitMatcher = (scanOutput =~ digitPattern)
                                
                                if (digitMatcher.find()) {
                                    scanId = digitMatcher[0][1]
                                    echo "‚úÖ Posible Scan ID encontrado: ${scanId}"
                                    env.SCAN_ID = scanId
                                } else {
                                    echo "‚ùå No se encontr√≥ ning√∫n Scan ID en el output"
                                    
                                    // Pedir input manual con el valor por defecto del Scan ID visible
                                    env.SCAN_ID = input(
                                        message: 'Por favor ingresa el Scan ID de FoD (ej: 15893265)', 
                                        parameters: [string(name: 'SCAN_ID', defaultValue: '15893265', description: 'Scan ID from FoD portal')]
                                    )
                                    echo "‚úÖ Scan ID ingresado manualmente: ${env.SCAN_ID}"
                                }
                            }
                            
                            echo "üéØ Scan ID definitivo: ${env.SCAN_ID}"
                            echo "üåê Ver en portal: ${params.FOD_URL}"
                        }
                    } else {
                        echo "‚è≠Ô∏è  FoD SAST scan skipped by parameter choice"
                    }
                }
            }
        }

        stage('Wait for Scan Completion') {
            steps {
                script {
                    // Solo ejecutar si se hizo scan y se tiene Scan ID
                    if (params.FOD_SAST == true && env.SCAN_ID && env.SCAN_ID != "MANUAL_REVIEW_NEEDED") {
                        withCredentials([
                            string(credentialsId: 'iwa-fod-client-id', variable: 'FOD_CLIENT_ID'),
                            string(credentialsId: 'iwa-fod-client-secret', variable: 'FOD_CLIENT_SECRET')
                        ]) {
                            bat """
                                @echo off
                                echo [INFO] Waiting for scan ${env.SCAN_ID} to complete...
                                
                                fcli.exe fod session login --client-id "%FOD_CLIENT_ID%" --client-secret "%FOD_CLIENT_SECRET%" --url "${params.FOD_URL}" --fod-session jenkins
                                
                                set /a TIMEOUT_SECONDS=${env.SCAN_TIMEOUT_MINUTES_INT} * 60
                                fcli.exe fod sast-scan wait-for ${env.SCAN_ID} --fod-session jenkins --timeout %TIMEOUT_SECONDS%
                                if %errorlevel% neq 0 (
                                    echo [WARNING] Scan timed out or failed
                                )
                                
                                echo [INFO] Getting scan results...
                                fcli.exe fod sast-scan get ${env.SCAN_ID} --fod-session jenkins --output json > scan_results.json
                                
                                fcli.exe fod session logout --fod-session jenkins
                            """
                        }
                    } else {
                        echo "‚è≠Ô∏è  Scan completion check skipped"
                    }
                }
            }
        }

        stage('Validate Scan Results') {
            steps {
                script {
                    // Solo validar si se tiene archivo de resultados
                    if (params.FOD_SAST == true && fileExists('scan_results.json')) {
                        def results = readJSON file: 'scan_results.json'
                        def critical = results.detailScanResult?.critical ?: 0
                        def high = results.detailScanResult?.high ?: 0
                        
                        echo "üìä SCAN RESULTS:"
                        echo "   Critical Issues: ${critical}"
                        echo "   High Issues: ${high}"
                        echo "   Threshold - Critical: ${env.CRITICAL_THRESHOLD_INT}"
                        echo "   Threshold - High: ${env.HIGH_THRESHOLD_INT}"
                        
                        if (critical > env.CRITICAL_THRESHOLD_INT) {
                            error "‚ùå BUILD FAILED: Critical issues exceed threshold"
                        }
                        
                        if (high > env.HIGH_THRESHOLD_INT) {
                            error "‚ùå BUILD FAILED: High issues exceed threshold"
                        }
                        
                        echo "‚úÖ SCAN PASSED: All thresholds met"
                    } else {
                        echo "‚è≠Ô∏è  Scan validation skipped"
                    }
                }
            }
        }
    }

    post {
        always {
            echo "üìã PIPELINE SUMMARY"
            echo "   Status: ${currentBuild.currentResult}"
            echo "   FoD Portal: https://ams.fortify.com"
            
            // Limpieza
            bat """
                @echo off
                if exist fcli-windows.zip del fcli-windows.zip
                if exist fcli.exe del fcli.exe
                if exist scan_results.json del scan_results.json 2>nul
            """
            cleanWs()
        }
        success {
            echo "‚úÖ PIPELINE SUCCEEDED"
        }
        failure {
            echo "‚ùå PIPELINE FAILED"
        }
    }
}