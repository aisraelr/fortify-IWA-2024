name: CI with Debricked Scan

on: [push, pull_request]

jobs:
  build-and-test:
    name: Build and Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js (example)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  debricked-scan:
    name: Debricked Scan and Policy Check
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debricked cache
        uses: debricked/actions/cache@v4

      - name: Debricked scan (non-docker)
        uses: debricked/actions/scan-non-docker@v4
        env:
          DEBRICKED_TOKEN: ${{ secrets.DEBRICKED_TOKEN }}

      - name: Wait for scan and fetch report
        id: get-scan-result
        run: |
          echo "Fetching vulnerabilities from Debricked API..."
          SCAN_ID=$(cat .debricked/scan_id)
          echo "Scan ID: $SCAN_ID"

          RESPONSE=$(curl -s -X GET "https://debricked.com/api/1.0/open/vulnerabilities/overview?scanId=$SCAN_ID" \
            -H "Authorization: Bearer ${{ secrets.DEBRICKED_TOKEN }}")

          echo "Full response: $RESPONSE"

          CRITICAL=$(echo "$RESPONSE" | jq '.data.critical')
          HIGH=$(echo "$RESPONSE" | jq '.data.high')

          echo "CRITICAL=$CRITICAL" >> $GITHUB_ENV
          echo "HIGH=$HIGH" >> $GITHUB_ENV

      - name: Validate critical and high issues
        run: |
          echo "Critical issues: $CRITICAL"
          echo "High issues: $HIGH"

          if [ "$CRITICAL" -gt 10 ]; then
            echo "❌ Too many critical issues ($CRITICAL). Failing pipeline."
            exit 1
          fi

          if [ "$HIGH" -gt 20 ]; then
            echo "❌ Too many high severity issues ($HIGH). Failing pipeline."
            exit 1
          fi

        env:
          CRITICAL: ${{ env.CRITICAL }}
          HIGH: ${{ env.HIGH }}
